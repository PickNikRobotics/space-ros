name: Earthly build
on:
  workflow_dispatch:
  push:
    branches: ['main']
    tags: ['*']
  pull_request:
  schedule:
    - cron: '0 11 * * *'
jobs:
  build-testing-results:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up earthly
        run: |
          sudo wget https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -O /usr/local/bin/earthly
          sudo chmod 755 /usr/local/bin/earthly
      - name: Build Space ROS
        id: build
        run: |
          earthly --ci --output +sources
          earthly --ci --output +build-testing
          echo "archivename=$(basename log/build_results_archives/build_results_*.tar.bz2)" >> $GITHUB_ENV
      - name: Upload build results archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.archivename}}
          path: log/build_results_archives/${{env.archivename}}
          if-no-files-found: error
  space-ros-image:
    outputs:
      output_amd: ${{ steps.push_image.outputs.output_linux-amd64 }}
      output_arm: ${{ steps.push_image.outputs.output_linux-arm64 }}
    strategy:
      matrix: 
        platform: [linux/amd64, linux/arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up earthly
        run: |
          sudo wget https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -O /usr/local/bin/earthly
          sudo chmod 755 /usr/local/bin/earthly
      - name: Build spaceros image
        run: |
          earthly --ci --platform=${{ matrix.platform }} --output +sources
          earthly --ci --platform=${{ matrix.platform }} +image
      - name: Push tagged spaceros images to Dockerhub
        id: push_image
        env:
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_RW_TOKEN }}
        if: ${{ github.ref_type == 'tag' }}
        run: |
          echo $DOCKER_HUB_TOKEN | docker login --username osrfbot --password-stdin
          PF=$(sed 's/\//-/g' <(echo ${{ matrix.platform }}))
          TAG=osrf/space-ros:${{ github.ref_name }}-${PF}
          earthly --ci --platform=${{ matrix.platform }} --push +push-image --TAG="${TAG}" --LATEST=""
          echo "output_${PF}=${TAG}" >> "$GITHUB_OUTPUT"
      - name: Push the main spaceros image to GHCR
        if: ${{ github.ref_name == 'main' && contains(matrix.platform, 'amd') }}
        run: |
          earthly --ci --push +push-image --TAG="ghcr.io/space-ros/space-ros:main" --LATEST=""
  combine-manifests:
    runs-on: ubuntu-latest
    needs: space-ros-image
    steps:
      - name: Combine Manifests
        env:
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_RW_TOKEN }}
        run: |
          echo $DOCKER_HUB_TOKEN | docker login --username osrfbot --password-stdin
          docker manifest create osrf/space-ros:${{ github.ref_name }} \
            --amend ${{ join(needs.space-ros-image.outputs, ' --amend ') }}
          docker manifest push osrf/space-ros:${{ github.ref_name }}
